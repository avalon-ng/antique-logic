// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function log() {
  return 1;
}

var Js = /* module */[/* log */log];

var someArr = /* array */[
  1,
  2,
  3
];

function add5(param) {
  return 5 + param | 0;
}

add5(10);

function add(a, b) {
  return a + b | 0;
}

function add10(param) {
  return 10 + param | 0;
}

add10(10);

function fib(n) {
  var match = n <= 1;
  if (match) {
    return 1;
  } else {
    return fib(n - 2 | 0) + fib(n - 1 | 0) | 0;
  }
}

fib(10);

var l = List.mapi((function (i, x) {
        return Caml_int32.imul(x, i + 1 | 0);
      }), /* :: */[
      12,
      /* :: */[
        5,
        /* :: */[
          8,
          /* :: */[
            4,
            /* [] */0
          ]
        ]
      ]
    ]);

$$Array.of_list(l);

var tup = /* tuple */[
  11,
  12
];

var a = 11;

var b = 12;

var s = "abc";

exports.Js = Js;
exports.tup = tup;
exports.a = a;
exports.b = b;
exports.someArr = someArr;
exports.s = s;
exports.add5 = add5;
exports.add = add;
exports.add10 = add10;
exports.fib = fib;
exports.l = l;
/*  Not a pure module */
